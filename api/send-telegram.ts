import type { VercelRequest, VercelResponse } from '@vercel/node';

const TELEGRAM_BOT_TOKEN = '8149651558:AAEcCMGUzcEDULbcGHbk0lCMhk_S51GUBJo';
const TELEGRAM_CHAT_ID = '944549036';

export default async function handler(req: VercelRequest, res: VercelResponse) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    const { type, ...data } = req.body;

    let message = '';

    switch (type) {
      case 'booking':
        message = `
üßò <b>–ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–Ω—è—Ç—Ç—è</b>

üë§ –Ü–º'—è: ${data.name}
üìß Email: ${data.email}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}
üí¨ –ö–æ–º–µ–Ω—Ç–∞—Ä: ${data.comment || '–ù–µ–º–∞—î'}

–ß–∞—Å: ${new Date().toLocaleString('uk-UA')}
        `;
        break;

      case 'callback':
        message = `
üìû <b>–ó–∞–ø–∏—Ç –Ω–∞ –∑–≤–æ—Ä–æ—Ç–Ω—ñ–π –¥–∑–≤—ñ–Ω–æ–∫</b>

üë§ –Ü–º'—è: ${data.name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}
üí¨ –ö–æ–º–µ–Ω—Ç–∞—Ä: ${data.comment || '–ù–µ–º–∞—î'}

–ß–∞—Å: ${new Date().toLocaleString('uk-UA')}
        `;
        break;

      case 'newsletter':
        message = `
üì¨ <b>–ù–æ–≤–∞ –ø—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ –Ω–æ–≤–∏–Ω–∏</b>

üìß Email: ${data.email}

–ß–∞—Å: ${new Date().toLocaleString('uk-UA')}
        `;
        break;

      case 'chat':
        message = `
üí¨ <b>–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —á–∞—Ç—É</b>

${data.message}

–ß–∞—Å: ${new Date().toLocaleString('uk-UA')}
        `;
        break;

      default:
        return res.status(400).json({ error: 'Invalid type' });
    }

    const telegramUrl = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;

    const response = await fetch(telegramUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: message.trim(),
        parse_mode: 'HTML',
      }),
    });

    if (!response.ok) {
      throw new Error('Failed to send message to Telegram');
    }

    return res.status(200).json({ success: true });
  } catch (error) {
    console.error('Error sending to Telegram:', error);
    return res.status(500).json({ error: 'Failed to send message' });
  }
}
